/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Short variant calling
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    */

    withName: DEEPVARIANT {

        if(params.preset == 'revio' | params.preset == 'pacbio') {
            ext.args = {"--model_type PACBIO --sample_name=${meta.id}"}
        } else if(params.preset == 'ONT_R10') {
            ext.args = {"--model_type ONT_R104 --sample_name=${meta.id}"}
        }

        publishDir = [
            path: { "${params.outdir}/short_variant_calling/deepvariant/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: GLNEXUS {
        ext.args = '--config DeepVariant_unfiltered'
        publishDir = [
            path: { "${params.outdir}/short_variant_calling/merged_snv_calls/glnexus" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BCFTOOLS_CONCAT_DV {

        ext.args = '--allow-overlaps'

        publishDir = [
            path: { "${params.outdir}/short_variant_calling/bcftools/concat/dv/singlesample/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BCFTOOLS_CONCAT_DV_VCF {

        ext.args = '--allow-overlaps'

        publishDir = [
            path: { "${params.outdir}/short_variant_calling/bcftools/concat/dv_vcf/singlesample/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: BCFTOOLS_SORT_DV {

        publishDir = [
            path: { "${params.outdir}/short_variant_calling/merged_snv_calls/deepvariant/gvcf/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: BCFTOOLS_SORT_DV_VCF {

        publishDir = [
            path: { "${params.outdir}/short_variant_calling/merged_snv_calls/deepvariant/vcf/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: TABIX_EXTRA_GVCFS {

        publishDir = [
            path: { "${params.outdir}/short_variant_calling/tabix/extra_gvcfs/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: TABIX_DV {

        publishDir = [
            path: { "${params.outdir}/short_variant_calling/tabix/deepvariant/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: TABIX_GLNEXUS {

        publishDir = [
            path: { "${params.outdir}/short_variant_calling/merged_snv_calls/glnexus/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BCFTOOLS_VIEW_REGIONS {

        publishDir = [
            path: { "${params.outdir}/short_variant_calling/bcftools/view_regions/extra_gvcfs/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

    }
}
